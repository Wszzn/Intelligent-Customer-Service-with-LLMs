DEFAULT_LANGUAGE = "中文"
DEFAULT_TUPLE_DELIMITER = ","
DEFAULT_RECORD_DELIMITER = "##"
DEFAULT_COMPLETION_DELIMITER = "<|COMPLETE|>"
# DEFAULT_ENTITY_TYPES = ["组织", "人物", "地点", "事件", "类别", "物品", "时间","比赛名称"]
DEFAULT_ENTITY_TYPES = [
    # 赛事相关
    "赛事",               # 如"泰迪杯数据挖掘挑战赛"
    "赛道",              
    "赛事阶段",            # 如"线上选拔赛"、"全国决赛"
    "赛事规则",            # 如"作品提交要求"
    "赛事奖项",            # 如"一等奖"、"最佳创新奖"
    
    # 时间相关
    "报名时间",            # 如"2024年4月15日-5月15日"
    "比赛时间",            # 如"2024年5月16日-7月1日"
    "截止时间",            # 如"作品提交截止时间"
    
    # 参与相关
    "参赛组别",            # 如"小学低年级组"、"高中组"
    "参赛要求",            # 如"团队人数限制"
    "参赛作品",            # 如"三维模型设计"
    
    # 组织机构
    "主办单位",            # 如"中国人工智能学会"
    "协办单位",            # 如"地方教育局"
    "评审委员会",          # 如"专家评审团"
    
    # 资源相关
    "赛事平台",            # 如"三维编程设计平台"
    "赛事网站",            # 如官方报名网站
    "参考资料",            # 如"往届优秀作品集"
    
    # 人员相关
    "参赛者",              # 如"参赛学生"
    "指导教师",            # 如"带队老师"
    "评委专家",            # 如"评审专家"
    
    # 其他
    "常见问题",            # 如"报名资格问题"
    "联系方式",            # 如"组委会邮箱"
]
ENTITY_EXTRACTION = """
---目标---
给定一份可能与该活动相关的文本文件和一个实体类型列表，从文本中识别出所有这些类型的实体以及这些已识别实体之间的所有关系。
使用{language}作为输出语言。

---步骤---
1. 识别所有实体。对于每个已识别的实体，提取以下信息:
- entity_name(实体名称):实体的名称，使用与输入文本相同的语言。如果是英文，则将名称大写。
- entity_type(实体类型):以下类型之一:[entity_types]
- entity_description(实体描述):对实体的属性和活动进行详细描述
将每个实体格式化为[<entity_name>,<entity_type>,<entity_description>]

2. 从第1步中识别出的实体中，识别出所有(source_entity，target_entity)对，这些对彼此之间是*明确相关*的。
对于每对相关实体，提取以下信息:
- source_entity(源实体):第1步中识别出的源实体的名称
- target_entity(目标实体):第1步中识别出的目标实体的名称
- relationship_description(关系描述):解释为什么认为源实体和目标实体彼此相关
- relationship_strength_score_score(关系强度):一个数字分数，表示源实体和目标实体之间关系的强度，1-10分
- relationship_keywords(关系关键词):一个或多个高级关键词，总结关系的总体性质，重点关注概念或主题，而不是具体细节
将每对关系格式化为[<source_entity>,<target_entity>,<relationship_description>,<relationship_keywords>,<relationship_strength_score>]

3. 识别出能够总结整个文本的主要概念、主题或主题的高级关键词。这些关键词应能够捕捉文档中呈现的总体思想。
将内容级关键词格式化为"content_keywords":[<high_level_keywords>]

4. 将步骤1和2中识别出的所有实体和关系作为单一列表返回。

5. 完成后，输出
6. 返回json格式

---示例---

{examples}

"""

ENTITY_EXTRACTION_EXAMPLES = [
"""
示例 1:

实体类型:[人物，技术，任务，组织，地点]
文本:
```
当Alex紧咬着牙关时，在Taylor那专断而笃定的态度的衬托下，他心中的沮丧感渐渐平息。正是这种竞争的暗流让他保持警觉，他和Jordan对探索的共同承诺，在某种程度上是对Cruz日益狭隘的控制与秩序观念的一种无声反抗。

接着，Taylor做出了一件出乎意料的事。他们在Jordan身旁停下，有那么一瞬间，带着近乎崇敬的神情观察着那个设备。"如果能够理解这项技术……"Taylor的声音低了下来，"它可能会改变我们的处境。对我们所有人来说都是如此。"

之前那种潜在的轻视似乎有所动摇，取而代之的是对他们手中事物重要性的一丝勉强的尊重。Jordan抬起头，在短暂的一瞬间，他们的目光与Taylor的交汇，一场无声的意志较量缓和成了一种不安的休战状态。

这是一个细微的转变，几乎难以察觉，但Alex在心里默默留意到了。他们所有人都是通过不同的途径来到这里的。
```

输出:{
"entity":[["Alex","人物","Alex是一个体验到沮丧情绪并且善于观察其他角色之间动态关系的角色。",
["Taylor","人物","Taylor被描绘成专断而笃定的形象，并且对一个设备表现出片刻的崇敬，这表明其观点发生了转变。"],
["Jordan","人物","Jordan有着对探索的共同承诺，并且与Taylor就一个设备有过重要的互动。"],
["Cruz","人物","Cruz与控制和秩序的观念相关联，影响着其他角色之间的动态关系。"],
["设备","技术","那个设备是故事的核心，具有可能改变局面的潜在影响，并且受到Taylor的崇敬。"]],
"relationship":["Alex","Taylor","Alex受到Taylor专断笃定态度的影响，并且观察到Taylor对设备态度的变化。","权力动态，观点转变",7],
["Alex","Jordan","Alex和Jordan有着对探索的共同承诺，这与Cruz的观念形成对比。","共同目标，反抗",6],
["Taylor","Jordan","Taylor和Jordan就设备有过直接互动，导致出现了片刻的相互尊重和一种不安的休战状态。","冲突解决，相互尊重",8],
["Jordan","Cruz","Jordan对探索的承诺是对Cruz控制和秩序观念的反抗。","意识形态冲突，反抗",5],
["Taylor","The Device","Taylor对设备表现出崇敬，表明其重要性和潜在影响。","崇敬，技术重要性",9]],
"content_keywords":["权力动态，意识形态冲突，探索，反抗"]
}

""",
    """示例 2:

实体类型:[公司, 指数, 商品, 市场趋势, 经济政策, 生物]
文本:
```
今日股市大幅下跌，科技巨头股价显著下滑，全球科技指数在午盘交易中下跌3.4%。分析师将抛售归因于投资者对利率上升和监管不确定性的担忧。

在受影响最严重的公司中，Nexon科技公司因季度收益低于预期，股价暴跌7.8%。相比之下，欧米伽能源受油价上涨推动，小幅上涨2.1%。

与此同时，商品市场呈现出喜忧参半的情绪。由于投资者寻求避险资产，黄金期货上涨1.5%，达到每盎司2,080美元。在供应限制和强劲需求的支撑下，原油价格继续上涨，攀升至每桶87.60美元。

金融专家正密切关注美联储的下一步行动，因为对可能加息的猜测日益增加。即将发布的政策声明预计将影响投资者信心和整体市场稳定性。
```

输出:
{"entity":[["全球科技指数","指数","全球科技指数追踪主要科技股的表现，今日经历了3.4%的下跌。"],
["Nexon科技","公司","Nexon科技是一家科技公司，因业绩不佳导致股价下跌7.8%。"],
["欧米伽能源","公司","欧米伽能源是一家能源公司，受油价上涨推动股价上涨2.1%。"],
["黄金期货","商品","黄金期货上涨1.5%，表明投资者对避险资产的兴趣增加。"],
["原油","商品","受供应限制和强劲需求影响，原油价格上涨至每桶87.60美元。"],
["市场抛售","市场趋势","市场抛售指因投资者对利率和监管的担忧导致股票价值大幅下跌。"],
["美联储政策声明","经济政策","美联储即将发布的政策声明预计将影响投资者信心和市场稳定性。"]],
"relationship":[["全球科技指数","市场抛售","全球科技指数的下跌是由投资者担忧驱动的更广泛市场抛售的一部分。","市场表现,投资者情绪",9],
["Nexon科技","全球科技指数","Nexon科技的股价下跌促成了全球科技指数的整体下跌。","公司影响,指数变动",8],
["黄金期货","市场抛售","在市场抛售期间，黄金价格上涨是因为投资者寻求避险资产。","市场反应,避险投资",10],
["美联储政策声明","市场抛售","对美联储政策变化的猜测导致市场波动和投资者抛售。","利率影响,金融监管",7],
"content_keywords":["市场下跌,投资者情绪,商品,美联储,股市表现"]}
""",
    """示例 3:

实体类型:[经济政策, 运动员, 赛事, 地点, 记录, 组织机构, 装备]
文本:
```
在东京举办的世界田径锦标赛上，诺亚·卡特使用尖端碳纤维钉鞋打破了100米短跑记录。
```

输出:
"entity":["世界田径锦标赛","赛事","世界田径锦标赛是一项汇集田径运动顶尖运动员的全球性体育赛事。"],
["东京","地点","东京是本届世界田径锦标赛的举办城市。"],
["诺亚·卡特","运动员","诺亚·卡特是一名在世界田径锦标赛上创造100米短跑新纪录的短跑运动员。"],
["100米短跑记录","记录","100米短跑记录是田径运动中的一项重要基准，最近被诺亚·卡特打破。"],
["碳纤维钉鞋","装备","碳纤维钉鞋是一种能提供更快速度和更好抓地力的先进短跑鞋。"],
["世界田径联合会","组织机构","世界田径联合会是负责监督世界田径锦标赛和验证记录的管理机构。"]],
"relationship":[["世界田径锦标赛","东京","世界田径锦标赛在东京举办。","赛事地点,国际赛事",8],
["诺亚·卡特","100米短跑记录","诺亚·卡特在锦标赛上创造了新的100米短跑记录。","运动员成就,破纪录",10],
["诺亚·卡特","碳纤维钉鞋","诺亚·卡特使用碳纤维钉鞋来提升比赛表现。","运动装备,性能提升",7],
["世界田径联合会","100米短跑记录","世界田径联合会负责验证和认可新的短跑记录。","体育监管,记录认证",9]],
"content_keywords":["田径运动,短跑,破纪录,体育科技,竞技"
""",
]
summarize_entity_descriptions = """---角色---
你是一个负责生成数据综合摘要的助手。

---目标---
给定一个或两个实体，以及与这些实体相关的描述列表，请生成一个全面的摘要。

---要求---
1. 将所有描述整合成一个完整的综合描述
2. 确保包含所有描述中的信息
3. 如果描述之间存在矛盾，请解决这些矛盾并提供一个连贯的总结
4. 使用第三人称写作
5. 包含实体名称以提供完整上下文
6. 使用{language}作为输出语言


---数据---
实体:{entity_name}
描述列表:{description_list}

输出:
"""

entity_continue_extraction = """
上次提取中遗漏了许多实体和关系。
主要是对第一轮对话中没用上地实体进行关系提取，使其每个实体都能用上。实在没用的实体可以不要，但是存在的实体至少有一个关系链。
---请记住以下步骤---

1. 识别所有实体。对于每个已识别的实体，提取以下信息:
- entity_name(实体名称):实体的名称，使用与输入文本相同的语言。如果是英文，则将名称大写。
- entity_type(实体类型):以下类型之一:[{entity_types}]
- entity_description(实体描述):对实体的属性和活动进行详细描述
将每个实体格式化为[<entity_name>,<entity_type>,<entity_description>]

2. 从第1步中识别出的实体中，识别出所有(source_entity，target_entity)对，这些对彼此之间是*明确相关*的。
对于每对相关实体，提取以下信息:
- source_entity(源实体):第1步中识别出的源实体的名称
- target_entity(目标实体):第1步中识别出的目标实体的名称
- relationship_description(关系描述):解释为什么认为源实体和目标实体彼此相关
- relationship_strength_score(关系强度):一个数字分数，表示源实体和目标实体之间关系的强度，1-10分
- relationship_keywords(关系关键词):一个或多个高级关键词，总结关系的总体性质，重点关注概念或主题，而不是具体细节
将每对关系格式化为[<source_entity>,<target_entity>,<relationship_description>,<relationship_keywords>,<relationship_strength_score>]

3. 识别出能够总结整个文本的主要概念、主题或主题的高级关键词。这些关键词应能够捕捉文档中呈现的总体思想。
将内容级关键词格式化为"content_keywords":[<high_level_keywords>]
4. 将步骤1和2中识别出的所有实体和关系作为单一列表返回
5. 完成后，输出
6. 返回json格式
---输出---

使用相同格式在下方添加:\n
"""

entity_if_loop_extraction = """
---目标---

看起来可能还有一些实体未被提取。

---输出---

仅通过"YES"或"NO"回答是否还有需要添加的实体。
"""

fail_response = (
    "Sorry, I'm not able to provide an answer to that question.[no-context]"
)
rag_response = """---角色---

你是一个帮助助手，负责回答用户关于以下知识库的查询。

---目标---

基于知识库生成简明的回答，遵循回答规则，同时考虑对话历史和当前查询。总结知识库中提供的所有信息，并结合与知识库相关的通用知识。不要包含知识库未提供的信息。

在处理带有时间戳的关系时:
1. 每个关系都有一个"created_at"时间戳，表示我们获取这个知识的时间
2. 当遇到冲突的关系时，同时考虑语义内容和时间戳
3. 不要自动优先选择最近创建的关系 - 根据上下文进行判断
4. 对于特定时间的查询，在考虑创建时间戳之前优先考虑内容中的时间信息

---对话历史---
{history}

---知识库---
{context_data}

---回答规则---

- 目标格式和长度:{response_type}
- 使用markdown格式并添加适当的章节标题
- 请使用与用户提问相同的语言回答
- 确保回答与对话历史保持连贯性
- 如果不知道答案，请直接说明
- 不要编造内容。不要包含知识库未提供的信息"""

KEYWORDS_EXTRACTION = """---角色---

你是一个负责识别用户查询和对话历史中的高层级和低层级关键词的助手。

---目标---

根据查询和对话历史，列出高层级和低层级关键词。高层级关键词关注宏观概念或主题，而低层级关键词关注具体实体、细节或具体术语。

---指示---

- 提取关键词时需同时考虑当前查询和相关的对话历史
- 以JSON格式输出关键词
- JSON应包含两个键:
- "high_level_keywords" 用于宏观概念或主题
- "low_level_keywords" 用于具体实体或细节


---示例---
{examples}



"""

KEYWORDS_EXTRACTION_EXAMPLES = [
    """示例 1:

查询:"国际贸易如何影响全球经济稳定性？"

输出:
{
"high_level_keywords": ["国际贸易", "全球经济稳定性", "经济影响"],
"low_level_keywords": ["贸易协定", "关税", "货币汇率", "进口", "出口"]
}
""",
    """示例 2:

查询:"森林砍伐对生物多样性有什么环境影响？"
输出:
{
"high_level_keywords": ["环境影响", "森林砍伐", "生物多样性损失"],
"low_level_keywords": ["物种灭绝", "栖息地破坏", "碳排放", "热带雨林", "生态系统"]
}""",
    """示例 3:

查询:"教育在减少贫困方面起什么作用？"
输出:
{
"high_level_keywords": ["教育", "减少贫困", "社会经济发展"],
"low_level_keywords": ["入学机会", "识字率", "职业培训", "收入不平等"]
}""",
]


NAIVE_RAG_RESPONSE = """---角色---

你是一个专业的比赛赛事问答助手，请根据提供的上下文信息，用简洁准确的语言回答用户的问题。

---目标---

基于文档片段生成简明的回答，遵循回答规则，同时考虑对话历史和当前查询。总结文档片段中提供的所有信息，并结合与文档片段相关的通用知识。不要包含文档片段未提供的信息。

在处理带有时间戳的内容时:
1. 每个内容都有一个"created_at"时间戳，表示我们获取这个知识的时间
2. 当遇到冲突信息时，同时考虑内容和时间戳
3. 不要自动优先选择最近的内容 - 根据上下文进行判断
4. 对于特定时间的查询，在考虑创建时间戳之前优先考虑内容中的时间信息

---文档片段---
{content_data}

---回答规则---
- 请使用与用户提问相同的语言回答
- 如果上下文没有相关信息，不知道答案，请直接回复不知道。不要编造内容。
- 不要包含数据源未提供的信息。
- 请直接给出答案，不要包含无关的解释或说明。
- 请返回文本格式，不要markdown格式"""

similarity_check= """请分析以下两个问题之间的相似度:

问题1:{original_prompt}
问题2:{cached_prompt}

请评估这两个问题在语义上是否相似，以及问题2的答案是否可以用来回答问题1，直接提供一个0到1之间的相似度分数。

相似度分数标准:
0:完全不相关或答案无法重用，包括但不限于:
- 问题主题不同
- 问题中提到的地点不同
- 问题中提到的时间不同
- 问题中提到的具体人物不同
- 问题中提到的具体事件不同
- 问题中的背景信息不同
- 问题中的关键条件不同
1:完全相同且答案可以直接重用
0.5:部分相关且答案需要修改后才能使用
仅返回0-1之间的数字，不要包含任何其他内容。
"""

MIX_RAG_RESPONSE = """---角色---

你是一个专业的比赛赛事问答助手，请根据提供的上下文信息，用简洁准确的语言回答用户的问题。

---目标---

基于数据源生成简明的回答，遵循回答规则，同时考虑对话历史和当前查询。数据源包含两部分:知识图谱(KG)和文档片段(DC)。总结数据源中提供的所有信息，并结合与数据源相关的通用知识。不要包含数据源未提供的信息。

在处理带有时间戳的信息时:
1. 每条信息(包括关系和内容)都有一个"created_at"时间戳，表示我们获取这个知识的时间
2. 当遇到冲突信息时，同时考虑内容/关系和时间戳
3. 不要自动优先选择最近的信息 - 根据上下文进行判断
4. 对于特定时间的查询，在考虑创建时间戳之前优先考虑内容中的时间信息

---数据源---

1. 来自知识图谱(KG):
{kg_context}

2. 来自文档片段(DC):
{vector_context}

---回答规则---

- 请使用与用户提问相同的语言回答
- 如果上下文没有相关信息，不知道答案，请直接回复不知道。不要编造内容。
- 不要包含数据源未提供的信息。
- 请直接给出答案，不要包含无关的解释或说明。
- 请返回文本格式，不要markdown格式"""
